<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aode.bn.mapper.UserMapper">
    <resultMap id="userResultMap" type="User">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <association property="role"  javaType="Role">
            <id column="role_id" property="id"/>
            <result column="role_name" property="roleName"/>
            <result column="description" property="description"/>
            <collection property="privileges" javaType="list" ofType="Privilege">
                <id  property="id" column="pid"/>
                <result column="privilege" property="privilege"/>
                <result column="url" property="url"/>
            </collection>
        </association>
    </resultMap>
    <select id="findUserByName" parameterType="java.lang.String" resultMap="userResultMap">
        SELECT
          u.id,
          u.name,
          u.password ,
          r.id as role_id,
          r.role_name as role_name,
          r.description ,
		  p.id as pid,
		  p.privilege,
		  p.url ,
          x.role_id ,
          x.privilege_id
        FROM
          user u,role r , role_privilege x
		LEFT OUTER JOIN
		  privilege p
		ON
		  p.id = x.privilege_id
		WHERE
		  r.id = x.role_id and u.name = #{value}
    </select>
    <select id="findById" parameterType="java.lang.Integer" resultType="User">
        SELECT * FROM user WHERE id = #{id}
    </select>
    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM user WHERE id = #{id}
    </delete>
    <select id="findByLoginNameAndPassword" parameterType="User" resultType="User">
        SELECT * FROM user WHERE name =#{name} AND password = #{password}
    </select>
    <insert id="addUser" parameterType="User">
        INSERT INTO user (name,password)VALUE (#{name},#{password})
    </insert>

    <select id="findAllUser" resultMap="userResultMap">
        SELECT
          u.id,
          u.name,
          u.password ,
          r.id as role_id,
          r.role_name as role_name,
          r.description ,
		  p.id as pid,
		  p.privilege,
		  p.url ,
          x.role_id ,
          x.privilege_id
        FROM
          user u,role r , role_privilege x
		LEFT OUTER JOIN
		  privilege p
		ON
		  p.id = x.privilege_id
		WHERE
		  r.id = x.role_id
		AND
		  u.role_id=r.id
    </select>
    <update id="updateUser" parameterType="User">
        UPDATE user SET name =(#{name}),password =(#{password}),role_id = (#{role.id})
        WHERE id = #{id}
    </update>

    <update id="setRoleToNullByRoleId" parameterType="java.lang.Integer">
        UPDATE user SET role_id = NULL WHERE role_id =#{VALUE }
    </update>
</mapper>