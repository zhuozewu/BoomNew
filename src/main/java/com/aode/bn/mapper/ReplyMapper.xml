<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aode.bn.mapper.ReplyMapper" >
    <resultMap id="replyResultMap" type="Reply">
        <id column="rid" property="rid"/>
        <result column="content" property="content"/>
        <result column="postTime" property="postTime"/>
        <result column="replyCount" property="replyCount"/>
        <association property="author" javaType="User">
            <id column="author_id" property="id"/>
            <result column="name" property="name"/>
        </association>
        <association property="news" javaType="News">
            <id column="news_id" property="nid"/>
            <result column="title" property="title"/>
            <result column="replyCount" property="replyCount"/>
        </association>
    </resultMap>

    <resultMap id="replySonResultMap" type="Reply">
        <id column="rid" property="rid"/>
        <result column="content" property="content"/>
        <result column="postTime" property="postTime"/>
        <result column="replyCount" property="replyCount"/>
        <association property="author" javaType="User">
            <id column="author_id" property="id"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>


    <insert id="addReply" parameterType="Reply">
        INSERT INTO reply(content,postTime,news_id,author_id ,reply_id )
        VALUE (#{content},#{postTime},#{news.nid},#{author.id},#{reply.rid} )
    </insert>


    <select id="findById" parameterType="java.lang.Integer" resultMap="replyResultMap">
        SELECT
          u.id as author_id,
          u.name,
          n.nid as news_id,
          n.title ,
          n.replyCount ,
          r.rid,
          r.content,
          r.postTime,
          r.replyCount
        FROM
          reply r
        LEFT JOIN
          user u
        ON
          u.id = r.author_id
        LEFT JOIN
          news n
        ON
          n.nid = r.news_id
        WHERE
          r.rid = #{value }
    </select>

    <update id="updateReply" parameterType="Reply">
        UPDATE reply SET content =#{content},author_id =#{author.id},replyCount =#{replyCount}
        WHERE rid = #{rid}
    </update>

    <select id="findAllReplyByReplyId" parameterType="java.lang.Integer" resultMap="replySonResultMap">
        SELECT
        u.id as author_id,
        u.name,
        u.password,
        r.rid ,
        r.content ,
        r.postTime ,
        r.replyCount
        FROM
        reply r ,user u
        WHERE
        r.author_id = u.id
        AND
        r.reply_id  = #{VALUE }
    </select>


    <select id="findAllReplyByNewsId" parameterType="java.lang.Integer" resultMap="replyResultMap">
        SELECT
          u.id as author_id,
          u.name,
          n.nid as news_id,
          n.title ,
          n.replyCount ,
          r.rid,
          r.content,
          r.postTime,
          r.replyCount
        FROM
          reply r
        LEFT JOIN
          user u
        ON
          u.id = r.author_id
        LEFT JOIN
          news n
        ON
          n.nid = r.news_id
        WHERE
          r.news_id = #{value }
    </select>
    <select id="findAllReplyByUserId" parameterType="java.lang.Integer" resultMap="replySonResultMap">
        SELECT
        u.id as author_id,
        u.name,
        r.rid,
        r.content,
        r.postTime,
        r.replyCount
        FROM
        reply r
        LEFT JOIN
        user u
        ON
        u.id = r.author_id
        LEFT JOIN
        news n
        ON
        n.nid = r.news_id
        WHERE
        r.author_id = #{value }
    </select>

</mapper>